/**
 * Generated by orval v6.9.0 üç∫
 * Do not edit manually.
 * Shared Expenses
 * OpenAPI spec version: 1.0
 */
export type ListGroupsParams = { page?: number };

export type GroupRenameBody = {
  /** New name of the group */
  new_name: string;
  /** Most recent version of the group */
  group_version: number;
};

export type GroupRemoveMemberBody = {
  /** Email address of user to be removed */
  email: string;
  /** Most recent version of the group */
  group_version: number;
};

export type GroupAddMemberBody = {
  /** Email address of user to be added */
  email: string;
  /** Most recent version of the group */
  group_version: number;
};

/**
 * Example response
 */
export type GroupInfoResponse = Group;

/**
 * Access denied.
 */
export type NoResponseErrorResponse = unknown | null;

export type GroupListResponse = {
  groups: Group[];
  current_page: number;
  total_pages: number;
};

export type UserMembershipAllOfRole =
  typeof UserMembershipAllOfRole[keyof typeof UserMembershipAllOfRole];

// eslint-disable-next-line @typescript-eslint/no-redeclare
export const UserMembershipAllOfRole = {
  owner: 'owner',
  member: 'member',
} as const;

export type UserMembershipAllOf = {
  role: UserMembershipAllOfRole;
  joined: string;
};

/**
 * User data model
 */
export interface User {
  id: string;
  email: string;
  name: string;
}

/**
 * User Group Membership object
 */
export type UserMembership = User & UserMembershipAllOf;

/**
 * Group model
 */
export interface Group {
  id: string;
  name: string;
  members: UserMembership[];
  created: string;
  group_version: number;
}
